// (Les classes précédentes restent inchangées...)

// Fichier : model/CommandeArticle.java
package model;

public class CommandeArticle {
    private int idCommande;
    private int idArticle;
    private int quantite;
    private double prixTotal;

    public CommandeArticle(int idCommande, int idArticle, int quantite, double prixTotal) {
        this.idCommande = idCommande;
        this.idArticle = idArticle;
        this.quantite = quantite;
        this.prixTotal = prixTotal;
    }

    // Getters
    public int getIdCommande() { return idCommande; }
    public int getIdArticle() { return idArticle; }
    public int getQuantite() { return quantite; }
    public double getPrixTotal() { return prixTotal; }

    // Setters
    public void setIdCommande(int idCommande) { this.idCommande = idCommande; }
    public void setIdArticle(int idArticle) { this.idArticle = idArticle; }
    public void setQuantite(int quantite) { this.quantite = quantite; }
    public void setPrixTotal(double prixTotal) { this.prixTotal = prixTotal; }
}

// Fichier : dao/CommandeArticleDAO.java
package dao;

import model.CommandeArticle;
import utils.DataBaseConnection;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class CommandeArticleDAO {

    public void addArticleToCommande(CommandeArticle ca) {
        String query = "INSERT INTO commande_article (id_commande, id_article, quantite, prix_total) VALUES (?, ?, ?, ?)";

        try (Connection conn = DataBaseConnection.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setInt(1, ca.getIdCommande());
            pstmt.setInt(2, ca.getIdArticle());
            pstmt.setInt(3, ca.getQuantite());
            pstmt.setDouble(4, ca.getPrixTotal());
            pstmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public List<CommandeArticle> getArticlesByCommande(int idCommande) {
        List<CommandeArticle> liste = new ArrayList<>();
        String query = "SELECT * FROM commande_article WHERE id_commande = ?";

        try (Connection conn = DataBaseConnection.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setInt(1, idCommande);
            ResultSet rs = pstmt.executeQuery();

            while (rs.next()) {
                CommandeArticle ca = new CommandeArticle(
                    rs.getInt("id_commande"),
                    rs.getInt("id_article"),
                    rs.getInt("quantite"),
                    rs.getDouble("prix_total")
                );
                liste.add(ca);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return liste;
    }
} 
